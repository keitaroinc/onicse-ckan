# docker-compose build && docker-compose up -d
volumes:
  ckan_data:
  pg_data:
  solr_data:
  webassets_data:

services:
  # nginx:
  #   container_name: ${NGINX_CONTAINER_NAME}
  #   build:
  #     context: nginx/
  #     dockerfile: Dockerfile
  #   networks:
  #     - frontend
  #     - backend
  #   depends_on:
  #     ckan:
  #       condition: service_healthy
  #   env_file:
  #     - .ckan-env
  #   ports:
  #     - "0.0.0.0:${NGINX_PORT}:${NGINX_PORT}"
  #     - "0.0.0.0:${NGINX_SSLPORT}:${NGINX_SSLPORT}"
  #   volumes:
  #     - ./config:/config
  #     - /etc/letsencrypt:/etc/letsencrypt:ro
  #     - /tmp/acme_challenge:/tmp/acme_challenge 
  ckan:
    container_name: ckan
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=UTC
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - solr
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    env_file:
      - .ckan-env
    environment:
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      
    volumes:
      - ckan_data:/var/lib/ckan/default
      - webassets_data:/srv/app/data

  db:
    container_name: db
    build:
      context: .
      dockerfile: postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]

  solr:
    container_name: solr
    image: ckan/ckan-solr:2.10-solr8-spatial
    networks:
      - backend
    env_file:
      - .ckan-env
    environment:
      - CKAN_CORE_NAME=${CKAN_CORE_NAME}
      - CKAN_VERSION=${CKAN_VERSION}
    volumes:
      - solr_data:/var/solr
      - ${PWD}/solr8/ckan_init_solr.sh:/docker-entrypoint-initdb.d/ckan_init_solr.sh

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    networks:
      - backend

networks:
  frontend:
  backend:
